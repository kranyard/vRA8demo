name: OpenCart
version: 1
formatVersion: 1
inputs:
  user:
    type: string
    title: Username for System Admin Account
    description: The username you would like to have for the installation.
  pass:
    type: string
    encrypted: true
    title: Password for ocuser for OpenCart.
    description: The password you would like to have for OpenCart.
resources:
  frontend:
    type: Cloud.Machine
    dependsOn:
      - mysql
    properties:
      image: ubuntu
      flavor: Medium
      cloudConfig: |
        repo_update: true
        repo_upgrade: all
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted
 
        packages:
          - apache2
          - php
          - php-mysql
          - libapache2-mod-php
          - php-mcrypt
          - php-gd
          - php-mbstring
          - php-xml
          - php-zip
          - php-curl
          - mysql-server-5.7
          - unzip
           
        users:
          - name: ${input.user}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
          - name: ocuser
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
 
        runcmd:
          - systemctl restart apache2
          - USER=ocuser
          - PASS=${input.pass}
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - echo ${input.user}:$PASS | /usr/sbin/chpasswd
          - sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          - service ssh reload         
          - git clone https://github.com/mcclanc/opencart-demo.git /tmp/opencart
          - mv /tmp/opencart /var/www/
          - chown -R www-data.www-data /var/www/opencart
          - chmod -R 775 /var/www/opencart
          - tee /etc/apache2/sites-available/opencart.conf > /dev/null << EOF
          - <VirtualHost *:80>
          -   ServerName www.opencart.cmbu.local
          -   DocumentRoot /var/www/opencart
          -   <Directory /var/www/opencart/>
          -     AllowOverride All
          -     allow from all
          -   </Directory>
          - </VirtualHost>
          - EOF
          - cd /etc/apache2/sites-available/
          - a2ensite opencart.conf
          - a2dissite 000-default.conf
          - systemctl reload apache2
          - systemctl restart apache2
          - echo "[client]" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=ocuser" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=$PASS" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - export cloudip=$(curl http://checkip.amazonaws.com/)
          - mysqlip=${resource.mysql.networks[0].address}
          - export ip4=$cloudip
          - mysql -u $USER -h $mysqlip -e 'source /var/www/opencart/install/opencart.sql'
          - mysql -u $USER -h $mysqlip -e "INSERT INTO oc_user (user_id,user_group_id,username,password,salt,firstname,lastname,email,image,code,ip,status,date_added) VALUES (1,1,'admin','5feaa046f6927df3d744007ec1491dba838f672e','c4wnfrq9J','demo','user','admin@admin.com','none','none','none',1,'2019-01-31 06:29:09')" opencart
          - sed -i "s/frontendiphere/$ip4/g" /var/www/opencart/config.php
          - sed -i "s/dbiphere/$mysqlip/g" /var/www/opencart/config.php
          - sed -i "s/usernamehere/$USER/g" /var/www/opencart/config.php
          - sed -i "s/passwordhere/${input.pass}/g" /var/www/opencart/config.php
          - sed -i "s/frontendiphere/$ip4/g" /var/www/opencart/admin/config.php
          - sed -i "s/dbiphere/$mysqlip/g" /var/www/opencart/admin/config.php
          - sed -i "s/usernamehere/$USER/g" /var/www/opencart/admin/config.php
          - sed -i "s/passwordhere/$PASS/g" /var/www/opencart/admin/config.php
          - systemctl reload apache2
          - systemctl restart apache2
          - echo "ocuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      constraints:
        - tag: 'env:aws'
      networks:
        - network: '${resource.oc_network.id}'
  mysql:
    type: Cloud.Machine
    properties:
      image: ubuntu
      flavor: Medium
      cloudConfig: |
        repo_update: true
        repo_upgrade: all
        apt_source:
          - source: deb http://archive.ubuntu.com/ubuntu main universe multiverse restricted
 
        packages:
          - mysql-server-5.7
          - mysql-client
          - unzip
           
        users:
          - name: ${input.user}
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
          - name: ocuser
            sudo: ['ALL=(ALL) NOPASSWD:ALL']
            groups: sudo
            shell: /bin/bash
           
        runcmd:
          - export DEBIAN_FRONTEND=noninteractive
          - USER=ocuser
          - PASS=${input.pass}
          - echo $USER:$PASS | /usr/sbin/chpasswd
          - echo ${input.user}:$PASS | /usr/sbin/chpasswd
          - sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          - service ssh reload       
          - echo "mysql-server-5.7 mysql-server/root_password password root" | sudo debconf-set-selections
          - echo "mysql-server-5.7 mysql-server/root_password_again password root" | sudo debconf-set-selections
          - echo "[client]" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=root" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=root" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "user=ocuser" >> /etc/mysql/mysql.conf.d/mysqld.cnf
          - echo "password=$PASS" >> /etc/mysql/mysql.conf.d/mysqld.cnf         
          - sed -i 's/bind-address/#bind-address/g' /etc/mysql/mysql.conf.d/mysqld.cnf
          - systemctl restart mysql
          - mysql -u root -e "GRANT ALL ON *.* TO '$USER'@'%' IDENTIFIED BY '$PASS'"
          - mysql -u root -e 'CREATE DATABASE opencart'
          - mysql -u root -e 'USE opencart'
          - mysql -u root -e 'flush privileges'
          - echo 'Cloud-init is done!' >> /tmp/finished.txt
      constraints:
        - tag: 'env:aws'
      networks:
        - network: '${resource.oc_network.id}'
  oc_network:
    type: Cloud.Network
    properties:
      networkType: existing
      constraints:
        - tag: 'env:aws'